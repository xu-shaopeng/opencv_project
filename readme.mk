在OpenCV中，对图片操作的常见算法非常丰富，涵盖了图像的基本处理、特征提取、图像变换、图像分割、图像识别等多个方面。以下是一些常见的图片操作算法：

1. 图像基本处理
直方图均衡化：用于改善图像的对比度，通过拉伸图像的直方图，使其分布更加均匀，从而提高图像的视觉效果。
滤波操作：包括高斯滤波器、均值滤波器、中值滤波器等，用于去除图像噪声或进行图像平滑处理。
高斯滤波器：通过高斯函数对图像进行加权平均，适用于去除高斯噪声。
均值滤波器：使用邻域内像素的平均值来代替原像素值，但可能会模糊图像。
中值滤波器：使用中值代替邻域内的中心像素值，适用于去除椒盐噪声。
2. 图像算术操作
加、减、乘、除：对图像的像素值进行基本的算术运算，常用于图像融合、亮度调整等场景。
加权融合：使用cv2.addWeighted()函数，通过调整不同图像的权重来实现图像的融合。
3. 图像变换
仿射变换：包括旋转、平移、缩放等，用于改变图像的形状和大小。
透视变换：通过映射关系，将图像从一个视角转换到另一个视角。
4. 图像分割
阈值分割：通过设置阈值，将图像分割为前景和背景两部分。
边缘检测：如Sobel算子、Canny算子等，用于检测图像中的边缘信息。
5. 图像识别
特征检测与匹配：如SIFT、SURF、ORB等算法，用于提取图像中的关键点及其描述子，并进行匹配。
模板匹配：在图像中搜索与模板图像最相似的区域。
面部识别：通过检测面部特征点，进行面部识别或表情分析。
6. 其他操作
图像颜色空间转换：如将RGB图像转换为HSV、YUV等颜色空间，便于进行特定的图像处理操作。
形态学操作：如腐蚀、膨胀、开运算、闭运算等，用于改变图像的形状和结构。
这些算法在OpenCV中都有相应的函数或方法来实现，通过调用这些函数，可以方便地对图像进行各种处理。需要注意的是，不同的算法适用于不同的场景和需求，选择合适的算法对于图像处理的效果至关重要。